{"version":3,"sources":["services/BaseServices.js","services/MiPrograma.js","components/shows/ActivePerformance.js","components/Board.js","components/calendar/calendar.js","components/CreateShows.js","components/artist/CreateArtist.js","components/controlArtistPerformance.js","components/shows/CardShowItem.js","App.js","serviceWorker.js","index.js"],"names":["http","axios","create","baseURL","process","withCredentials","MiPrograma","getActivePerformance","arguments","length","undefined","Date","get","params","date","then","response","data","getPerformanceList","createShow","show","post","deleteShow","id","delete","getArtistsList","getShowsList","createArtist","deleteArtist","updateArtist","createPerformance","deletePerformance","updatePerformance","getShow","updateShow","put","concat","updateActivePerformance","showId","sessionId","blockList","getAllShows","getSpecificShow","setActive","getActive","ActivePerformance","props","active","sessions","find","block","current","artist","performance","react_default","a","createElement","Fragment","es","key","type","style","color","size","Header","title","extra","Body","fontSize","name","Footer","content","lib","tabs","initalPage","display","alignItems","justifyContent","height","fontWeight","backgroundImage","imageUrl","backgroundColor","description","Board","state","fetchShow","miPrograma","_this","setState","this","className","shows_ActivePerformance","Component","CreateShows","artists","performances","selectedArtist","selectedPerformance","order","fetchArtists","fetchPerformances","handleChange","e","Object","objectSpread","defineProperty","target","value","handleAddBlock","blocks","newBlocks","toConsumableArray","handleSubmit","preventDefault","alert","console","error","_this2","onSubmit","entry_default","onChange","d","map","i","p","onClick","s","CreateArtist","Form_default","Group","controlId","Label","Control","placeholder","Text","Check","label","Button","variant","getToday","today","setHours","ControlArtistPerformance","shows","loading","fethShows","handleChangeCurrent","isActive","session","changeDate","makeActive","_this$state","App","mode","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wTAQeA,SANFC,EAAMC,OAAO,CACxBC,QAASC,yCACTC,iBAAiB,IC2DJC,EAAA,CACbC,qBA9D2B,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAQ,IAAIG,KAAZ,OAC3BX,EAAKY,IAAI,SAAU,CAAEC,OAAQ,CAAEC,KAAM,gBAAiBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QA8DhFC,mBA5CyB,kBACzBlB,EAAKY,IAAI,iBAAiBG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QA4CpDE,WA1CiB,SAAAC,GAAI,OAAIpB,EAAKqB,KAAK,SAAUD,IA2C7CE,WAZiB,SAAAC,GACjBvB,EAAKwB,OAAO,SAAUD,IAYtBE,eAnDqB,kBACrBzB,EAAKY,IAAI,YAAYG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAmD/CS,aAVmB,SAAAH,GACnBvB,EAAKY,IAAI,SAAUW,IAUnBI,aAvCmB,SAAAP,GACnBpB,EAAKqB,KAAK,SAAUD,IAuCpBQ,aApCmB,SAAAL,GACnBvB,EAAKwB,OAAO,SAAUD,IAoCtBM,aAjCmB,SAAAN,GACnBvB,EAAKwB,OAAO,SAAUD,IAiCtBO,kBA9BwB,SAAAV,GACxBpB,EAAKqB,KAAK,SAAUD,IA8BpBW,kBA3BwB,SAAAR,GACxBvB,EAAKwB,OAAO,SAAUD,IA2BtBS,kBAxBwB,SAAAT,GACxBvB,EAAKwB,OAAO,SAAUD,IAwBtBU,QArEc,SAAAnB,GAAI,OAClBd,EAAKY,IAAI,SAAU,CAAEC,OAAQ,CAAEC,KAAMA,KAASC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAqExEiB,WAnEiB,SAACd,GAAD,OACjBpB,EAAKmC,IAAL,UAAAC,OAAmBhB,EAAKG,IAAMH,GAAML,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAmE9DoB,wBApD8B,SAACC,EAAQC,EAAWC,GAApB,OAC9BxC,EAAKmC,IAAI,UAAUG,EAAO,aAAaC,EAAWC,GAAWzB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAoDvFwB,YAlDkB,SAAC5B,GAAD,OAAYb,EAAKY,IAAI,SAAU,CAAEC,WAAUE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAmDvFyB,gBA3EsB,SAACnB,GAAD,OAAQvB,EAAKY,IAAL,UAAAwB,OAAmBb,IAAMR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QA4EjF0B,UApEgB,SAACvB,GAAD,OAAUpB,EAAKmC,IAAL,UAAAC,OAAmBhB,EAAKG,GAAxB,eAAwCR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAqE5F2B,UAnEgB,kBAAM5C,EAAKY,IAAL,iBAA0BG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,kBCkG7D4B,EAhGW,SAAAC,GACxB,IAMM1B,EAAO0B,EAAM1B,KAEb2B,EAAS3B,EAAK4B,SAASC,KAAK,SAAAC,GAChC,OAAO9B,EAAK+B,QAAQC,SAAWF,EAAME,OAAO7B,IAC1CH,EAAK+B,QAAQE,cAAgBH,EAAMG,YAAY9B,KAGnD,OAAKH,GAASA,GAA0B,IAAlBA,EAAK4B,SAEvBM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,IAAI,IAAIC,KAAK,UAAUC,MAAO,CAAEC,MAAO,WAC7CR,EAAAC,EAAAC,cAAA,2BAKDpC,EAAK+B,QASRG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWK,KAAK,QACdT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYK,KAAK,SACjBT,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAKM,OAAN,CACEC,MAAM,uBACNC,MAAOZ,EAAAC,EAAAC,cAAA,iCAETF,EAAAC,EAAAC,cAACE,EAAA,EAAKS,KAAN,KACEb,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEO,SAAU,KAAOrB,EAAOK,OAAOiB,OAE/Cf,EAAAC,EAAAC,cAACE,EAAA,EAAKY,OAAN,CACEC,QAAS,sBAGbjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYK,KAAK,QAEnBT,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACgB,EAAA,gBAAD,CAAiBjD,GAAG,aAClB+B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMe,KAlDC,CACX,CAAER,MAAO,sBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,iBA+CaS,WAAY,MAC5BpB,EAAAC,EAAAC,cAAA,OACEjC,GAAG,aACHsC,MAAO,CACLc,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRhB,MAAO,QACPM,SAAU,GACVW,WAAY,OACZC,gBAAe,OAAA5C,OAASW,EAAOK,OAAO6B,SAAvB,OAGhBlC,EAAOK,OAAOiB,MAEjBf,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLc,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRI,gBAAiB,SAGlBnC,EAAOM,YAAY8B,aAEtB7B,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLc,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRI,gBAAiB,SAGlBnC,EAAOK,OAAO+B,eAIrB7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,OAlEAJ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,6CCtCe2B,6MAEnBC,MAAQ,CACNjE,KAAM,KACNiC,YAAa,MAQfiC,UAAY,WACVC,EAAW3C,YACR7B,KAAK,SAAAE,GACJuE,EAAKC,SAAS,CAAErE,KAAMH,0FAN1ByE,KAAKJ,6CAUE,IAEClE,EAASsE,KAAKL,MAAdjE,KACR,OACEkC,EAAAC,EAAAC,cAAA,OAAKmC,UAAY,SACdvE,GAAQA,EAAK+B,SAAWG,EAAAC,EAAAC,cAACoC,EAAD,CAAmBxE,KAAMA,YAxBvByE,yDCDVA,4BCKJC,6MACnBT,MAAQ,CACNU,QAAS,GACTC,aAAc,GACdC,eAAgB,GAChBC,oBAAqB,GACrB9E,KAAM,CACJ6C,MAAO,GACPkC,MAAO,EACPrF,KAAM,IAAIH,KACVqC,SAAU,OAIdoD,aAAe,WACbb,EAAW9D,iBACRV,KAAK,SAAAgF,GAAO,OAAIP,EAAKC,SAAS,CAAEM,iBAGrCM,kBAAoB,WAClBd,EAAWrE,qBACRH,KAAK,SAAAiF,GAAY,OAAIR,EAAKC,SAAS,CAAEO,sBAQ1CM,aAAe,SAACC,GACdf,EAAKC,SAAS,CACZrE,KAAKoF,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EAAKH,MAAMjE,KADZoF,OAAAE,EAAA,EAAAF,CAAA,GAEDD,EAAEI,OAAOtC,KAAOkC,EAAEI,OAAOC,aAKhCC,eAAiB,WACf,IAAMC,EAAStB,EAAKH,MAAMjE,KAAK4B,SAEzB+D,EAAS,GAAA3E,OAAAoE,OAAAQ,EAAA,EAAAR,CACVM,GADU,CAEb,CACE1D,OAAQoC,EAAKH,MAAMY,eACnB5C,YAAamC,EAAKH,MAAMa,uBAI5BV,EAAKC,SAAS,CACZrE,KAAKoF,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EAAKH,MAAMjE,KADZ,CAEF4B,SAAU+D,SAKhBE,aAAe,SAACV,GACdA,EAAEW,iBAEF3B,EAAWpE,WAAWqE,EAAKH,MAAMjE,MAC9BL,KACC,kBAAMoG,MAAM,gBACZC,QAAQC,2FAtCZ3B,KAAKW,oBACLX,KAAKU,gDAyCE,IAAAkB,EAAA5B,KACDtE,EAAOsE,KAAKL,MAAMjE,KAExB,OACEkC,EAAAC,EAAAC,cAAA,QAAM+D,SAAU7B,KAAKuB,cACnB3D,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAUqD,MAAOxF,EAAKN,KAAM2G,SAAU,SAACC,GAAQJ,EAAKhB,aAAa,CAAEK,OAAQ,CAAEtC,KAAM,OAAQuC,MAAOc,QAElGpE,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOgD,MAAOxF,EAAK6C,MAAOI,KAAK,QAAQoD,SAAU/B,KAAKY,gBAGpEhD,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASgD,MAAOxF,EAAK+E,MAAO9B,KAAK,QAAQoD,SAAU/B,KAAKY,gBAGtEhD,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,UAAQiE,SAAU,SAAClB,GAAQe,EAAK7B,SAAS,CAAEQ,eAAgBM,EAAEI,OAAOC,UAClEtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAO,OACdlB,KAAKL,MAAMU,QAAQ4B,IAAI,SAACpE,EAAGqE,GAAJ,OACtBtE,EAAAC,EAAAC,cAAA,UAAQoD,MAAOrD,EAAEhC,GAAIoC,IAAKiE,GAAIrE,EAAEc,UAKtCf,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA,UAAQiE,SAAU,SAAClB,GAAQe,EAAK7B,SAAS,CAAES,oBAAqBK,EAAEI,OAAOC,UACvEtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAO,OACdlB,KAAKL,MAAMW,aAAa2B,IAAI,SAACE,EAAGD,GAAJ,OAC3BtE,EAAAC,EAAAC,cAAA,UAAQoD,MAAOiB,EAAEtG,GAAIoC,IAAKiE,GAAIC,EAAE5D,WAKtCX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASkE,QAASpC,KAAKmB,gBAApC,cAGFvD,EAAAC,EAAAC,cAAA,UACGpC,EAAK4B,SAAS2E,IAAI,SAACI,EAAGH,GAAJ,OACjBtE,EAAAC,EAAAC,cAAA,MAAIG,IAAKiE,GACNN,EAAKjC,MAAMU,QAAQ9C,KAAK,SAAAM,GAAC,OAAIA,EAAEhC,KAAOwG,EAAE3E,SAAQiB,KADnD,IAEGiD,EAAKjC,MAAMW,aAAa/C,KAAK,SAAAM,GAAC,OAAIA,EAAEhC,KAAOwG,EAAE1E,cAAaY,UAKjEX,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,iBArHiCiC,qBCqB1BmC,EAxBM,kBAErB1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACED,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK2E,MAAN,CAAYC,UAAU,kBACpB7E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK6E,MAAN,sBACA9E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK8E,QAAN,CAAczE,KAAK,QAAQ0E,YAAY,gBACvChF,EAAAC,EAAAC,cAACyE,EAAA1E,EAAKgF,KAAN,CAAW5C,UAAU,cAArB,mDAKFrC,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK2E,MAAN,CAAYC,UAAU,qBACpB7E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK6E,MAAN,iBACA9E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK8E,QAAN,CAAczE,KAAK,WAAW0E,YAAY,cAE5ChF,EAAAC,EAAAC,cAACyE,EAAA1E,EAAK2E,MAAN,CAAYC,UAAU,oBACpB7E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAKiF,MAAN,CAAY5E,KAAK,WAAW6E,MAAM,kBAEpCnF,EAAAC,EAAAC,cAACkF,EAAA,OAAD,CAAQC,QAAQ,UAAU/E,KAAK,UAA/B,+CCjBIgF,GCAuB/C,YDAZ,WACf,IAAMgD,EAAQ,IAAIlI,KAGlB,OAFAkI,EAAMC,SAAS,EAAE,EAAE,EAAE,GAEdD,IAGYE,6MACnB1D,MAAQ,CACN2D,MAAO,GACPlI,KAAM8H,IACNK,SAAS,KAGXC,UAAY,WACV3D,EAAW9C,YAAY,CAAE3B,KAAM0E,EAAKH,MAAMvE,OACvCC,KAAK,SAAAiI,GAAK,OAAIxD,EAAKC,SAAS,CAAEuD,MAAOA,EAAOC,SAAS,SAO1DE,oBAAsB,SAAC7G,EAAQc,EAAQC,GACrC,IAAMpC,EAAO,CACXM,GAAIe,EACJa,QAAS,CAAEC,SAAQC,gBAGrBkC,EAAWrD,WAAWjB,GACnBF,KAAK,kBAAMyE,EAAK0D,iBAGrBE,SAAW,SAAChI,EAAMiI,GAChB,OAAOjI,EAAK+B,SAAW/B,EAAK+B,QAAQC,OAAO7B,KAAO8H,EAAQjG,OAAO7B,IAC/DH,EAAK+B,QAAQE,YAAY9B,KAAO8H,EAAQhG,YAAY9B,MAGxD+H,WAAa,SAACxI,GACZ0E,EAAKC,SAAS,CAAE3E,QAAQ,WACtB0E,EAAK0D,iBAITK,WAAa,SAACnI,GACZmE,EAAW5C,UAAUvB,GAClBL,KAAK,WACJyE,EAAK0D,kGA3BTxD,KAAKwD,6CA+BE,IAAA5B,EAAA5B,KAAA8D,EACoB9D,KAAKL,MADzBmE,EACCR,MACR,OAFOQ,EACQP,QACI3F,EAAAC,EAAAC,cAAA,wBAEjBF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAUqD,MAAOlB,KAAKL,MAAMvE,KAAM2G,SAAU/B,KAAK4D,aAEhD5D,KAAKL,MAAM2D,MAAMrB,IAAI,SAAAvG,GAAI,OACxBkC,EAAAC,EAAAC,cAAA,OAAKG,IAAKvC,EAAKG,IACb+B,EAAAC,EAAAC,cAAA,UAAKpC,EAAK6C,QAER7C,EAAK2B,QACLO,EAAAC,EAAAC,cAAA,UAAQsE,QAAS,kBAAMR,EAAKiC,WAAWnI,KAAvC,eAJJ,UASEkC,EAAAC,EAAAC,cAAA,UACGpC,EAAK4B,SAAS2E,IAAI,SAACI,EAAGH,GAAJ,OACjBtE,EAAAC,EAAAC,cAAA,MAAIG,IAAKiE,GACNG,EAAE3E,OAAOiB,KADZ,KACoB0D,EAAE1E,YAAYY,OAC9BqD,EAAK8B,SAAShI,EAAM2G,IACpBzE,EAAAC,EAAAC,cAAA,UACEsE,QAAS,kBAAMR,EAAK6B,oBAAoB/H,EAAKG,GAAIwG,EAAE3E,OAAO7B,GAAIwG,EAAE1E,YAAY9B,MAD9E,yBAnEkCsE,aEYvC4D,mLAdX,OACEnG,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACbrC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQgG,KAAK,UACbpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAW1E,IACnD9B,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWhE,IAC5CxC,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW9B,IAC9C1E,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWf,aATvClD,aCGEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECRNC,IAASC,OACP/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAYC,SAAUnK,+CACpBkD,EAAAC,EAAAC,cAACgH,EAAD,OACaC,SAASC,eAAe,SDoHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,KAAK,SAAA+J,GACjCA,EAAaC","file":"static/js/main.853a36e4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true\n  \n});\n\nexport default http;","import http from \"./BaseServices\";\n\nconst getActivePerformance = (date = new Date()) =>\n  http.get('/shows', { params: { date: '2019-04-08' }}).then(response => response.data);\n\nconst getSpecificShow = (id) => http.get(`/shows/${id}`).then(response => response.data);\n\nconst getShow = date =>\n  http.get('/shows', { params: { date: date }}).then(response => response.data);\n\nconst updateShow = (show) =>\n  http.put(`/shows/${show.id}`, show).then(response => response.data);\n\nconst setActive = (show) => http.put(`/shows/${show.id}/setActive`).then(response => response.data);\n\nconst getActive = () => http.get(`/shows/active`).then(response => response.data);\n\nconst getArtistsList = () =>\n  http.get(\"/artists\").then(response => response.data);\n\n\nconst getPerformanceList = () =>\n  http.get(\"/performances\").then(response => response.data);\n\nconst createShow = show => http.post(\"/shows\", show)\n\nconst updateActivePerformance = (showId, sessionId, blockList) =>\n  http.put('/shows/'+showId+'/sessions/'+sessionId, blockList).then(response => response.data);\n\nconst getAllShows = (params) => http.get('/shows', { params }).then(response => response.data);\n\nconst createArtist = show => {\n  http.post(\"/shows\", show);\n}; //<-- ¿Será Show lo que le pase?\n\nconst deleteArtist = id => {\n  http.delete(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nconst updateArtist = id => {\n  http.delete(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nconst createPerformance = show => {\n  http.post(\"/shows\", show);\n}; //<-- ¿Será Show lo que le pase?\n\nconst deletePerformance = id => {\n  http.delete(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nconst updatePerformance = id => {\n  http.delete(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nconst deleteShow = id => {\n  http.delete(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nconst getShowsList = id => {\n  http.get(\"/shows\", id);\n}; //<-- ¿Será id lo que le pase?\n\nexport default {\n  getActivePerformance,\n  getPerformanceList,\n  createShow,\n  deleteShow,\n  getArtistsList,\n  getShowsList,\n  createArtist,\n  deleteArtist,\n  updateArtist,\n  createPerformance,\n  deletePerformance,\n  updatePerformance,\n  getShow,\n  updateShow,\n  updateActivePerformance,\n  getAllShows,\n  getSpecificShow,\n  setActive,\n  getActive\n};\n","import React from \"react\";\nimport { Card, WingBlank, WhiteSpace } from \"antd-mobile\";\nimport { StickyContainer } from \"react-sticky\";\nimport { Tabs } from \"antd-mobile\";\nimport { Icon } from \"antd-mobile\";\n\n// const convertDate = date => {\n//   const convertedDate = new Date(date);\n//   return (\n//     convertedDate.getDate() +\n//     \"-\" +\n//     (convertedDate.getMonth() + 1) +\n//     \"-\" +\n//     convertedDate.getFullYear()\n//   );\n// };\n\nconst ActivePerformance = props => {\n  const tabs = [\n    { title: \"Próximo Artista\" },\n    { title: \"Actuación\" },\n    { title: \"Biografía\" }\n  ];\n\n  const show = props.show\n\n  const active = show.sessions.find(block => {\n    return show.current.artist === block.artist.id &&\n      show.current.performance === block.performance.id\n  })\n\n  if (!show || (show && show.sessions === 0)) {\n    return (\n      <React.Fragment >\n        <Icon key=\"1\" type=\"loading\" style={{ color: \"black\" }} />\n        <div> Loading...</div>\n      </React.Fragment>\n    );\n  }\n\n  if (!show.current) {\n    return (\n      <React.Fragment >\n        Show no disponible en este momento.\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <WingBlank size=\"full\">\n        <WhiteSpace size=\"full\" />\n        <Card>\n          <Card.Header\n            title=\"Próximo Número\"\n            extra={<span>Programa de Hoy</span>}\n          />\n          <Card.Body>\n            <div style={{ fontSize: 30 }}>{active.artist.name}</div>\n          </Card.Body>\n          <Card.Footer\n            content={\"Artista especial\"}\n          />\n        </Card>\n        <WhiteSpace size=\"lg\" />\n      </WingBlank>\n      <WhiteSpace />\n      <StickyContainer id=\"down-card\">\n        <Tabs tabs={tabs} initalPage={\"t2\"}>\n          <div\n            id=\"card-image\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"250px\",\n              color: \"white\",\n              fontSize: 35,\n              fontWeight: \"bold\",\n              backgroundImage: `url(${active.artist.imageUrl})`\n            }}\n          >\n            {active.artist.name}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"250px\",\n              backgroundColor: \"#fff\"\n            }}\n          >\n            {active.performance.description}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"250px\",\n              backgroundColor: \"#fff\"\n            }}\n          >\n            {active.artist.description}\n          </div>\n        </Tabs>\n      </StickyContainer>\n      <WhiteSpace />\n    </React.Fragment>\n  );\n};\n\nexport default ActivePerformance;\n","import React, { Component } from \"react\";\nimport miPrograma from \"../services/MiPrograma\";\nimport ActivePerformance from \"./shows/ActivePerformance\";\n\nexport default class Board extends Component {\n  \n  state = {\n    show: null,\n    performance: []\n  }\n  \n\n  componentDidMount() {\n    this.fetchShow();\n  }\n\n  fetchShow = () => {\n    miPrograma.getActive()\n      .then(data => {\n        this.setState({ show: data })\n      })\n  }\n\n  render() {\n    //setInterval(this.fetchShow(), 2000)\n    const { show } = this.state;\n    return (\n      <div className = \"Board\">\n        {show && show.current && <ActivePerformance show={show} />}\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\n \nclass Calendario extends Component {\n  state = {\n    date: new Date(),\n  }\n \n  onChange = date => this.setState({ date });\n \n  render() {\n    return (\n      <div>\n        <Calendar\n          onChange={this.onChange}\n          value={this.state.date}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calendario","import React, { Component } from \"react\";\nimport ArtistPerformance from \"./shows/artistPerformance\";\nimport miPrograma from \"../services/MiPrograma\";\nimport ShowBlock from './shows/ShowBlock'\nimport Button  from \"react-bootstrap/Button\";\nimport { Icon } from \"antd-mobile\";\nimport Calendar from \"react-calendar\";\n\nexport default class CreateShows extends Component {\n  state = {\n    artists: [],\n    performances: [],\n    selectedArtist: '',\n    selectedPerformance: '',\n    show: {\n      title: '',\n      order: 0,\n      date: new Date(),\n      sessions: []\n    }\n  }\n\n  fetchArtists = () => {\n    miPrograma.getArtistsList()\n      .then(artists => this.setState({ artists }))\n  }\n\n  fetchPerformances = () => {\n    miPrograma.getPerformanceList()\n      .then(performances => this.setState({ performances }))\n  }\n\n  componentDidMount() {\n    this.fetchPerformances()\n    this.fetchArtists()\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      show: {\n        ...this.state.show,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  handleAddBlock = () => {\n    const blocks = this.state.show.sessions;\n\n    const newBlocks = [\n      ...blocks,\n      {\n        artist: this.state.selectedArtist,\n        performance: this.state.selectedPerformance,\n      }\n    ]\n\n    this.setState({\n      show: {\n        ...this.state.show,\n        sessions: newBlocks\n      }\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    miPrograma.createShow(this.state.show)\n      .then(\n        () => alert(\"show creado\"),\n        console.error\n      )\n  }\n\n  render() {\n    const show = this.state.show;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Calendar value={show.date} onChange={(d) => { this.handleChange({ target: { name: 'date', value: d }})}}/>\n\n        <div>\n          Title:\n          <input type=\"text\" value={show.title} name=\"title\" onChange={this.handleChange}/>\n        </div>\n\n        <div>\n          Order:\n          <input type=\"number\" value={show.order} name=\"order\" onChange={this.handleChange}/>\n        </div>\n\n        <div>\n          Artist:\n          <select onChange={(e) => { this.setState({ selectedArtist: e.target.value }) }}>\n            <option value={null}></option>\n            {this.state.artists.map((a, i) => (\n              <option value={a.id} key={i}>{a.name}</option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          Performance:\n          <select onChange={(e) => { this.setState({ selectedPerformance: e.target.value }) }}>\n            <option value={null}></option>\n            {this.state.performances.map((p, i) => (\n              <option value={p.id} key={i}>{p.title}</option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <button type=\"button\" onClick={this.handleAddBlock}>Add block</button>\n        </div>\n\n        <ul>\n          {show.sessions.map((s, i) => (\n            <li key={i}>\n              {this.state.artists.find(a => a.id === s.artist).name},\n              {this.state.performances.find(a => a.id === s.performance).title}\n            </li>\n          ))}\n        </ul>\n\n        <button type=\"submit\">Crear</button>\n      </form>\n    )\n  }\n}\n\n","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport { Button } from 'react-bootstrap/Button'\n\n\nconst CreateArtist = () => \n  (\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicChecbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n  )\n\nexport default CreateArtist;","import React, { Component } from \"react\";\nimport miPrograma from \"../services/MiPrograma\";\nimport { Icon } from \"antd-mobile\";\nimport CardShowItem from \"./shows/CardShowItem\"\nimport Calendar from \"react-calendar\";\n\nconst getToday = () => {\n  const today = new Date();\n  today.setHours(2,0,0,0);\n\n  return today;\n}\n\nexport default class ControlArtistPerformance extends Component {\n  state = {\n    shows: [],\n    date: getToday(),\n    loading: true\n  }\n\n  fethShows = () => {\n    miPrograma.getAllShows({ date: this.state.date })\n      .then(shows => this.setState({ shows: shows, loading: false }))\n  }\n\n  componentDidMount() {\n    this.fethShows();\n  }\n\n  handleChangeCurrent = (showId, artist, performance) => {\n    const data = {\n      id: showId,\n      current: { artist, performance }\n    }\n\n    miPrograma.updateShow(data)\n      .then(() => this.fethShows())\n  }\n\n  isActive = (show, session) => {\n    return show.current && show.current.artist.id === session.artist.id &&\n      show.current.performance.id === session.performance.id\n  }\n\n  changeDate = (date) => {\n    this.setState({ date }, () => {\n      this.fethShows()\n    })\n  }\n\n  makeActive = (show) => {\n    miPrograma.setActive(show)\n      .then(() => {\n        this.fethShows()\n      })\n  }\n\n  render() {\n    const { shows, loading } = this.state;\n    if (loading)return <p>Cargando...</p>\n    return (\n      <div>\n\n        <Calendar value={this.state.date} onChange={this.changeDate}/>\n\n        {this.state.shows.map(show => (\n          <div key={show.id}>\n            <h1>{show.title}</h1>\n            \n            {!show.active && (\n              <button onClick={() => this.makeActive(show)}>Show activo</button>\n            )}\n\n            blocks:\n\n            <ul>\n              {show.sessions.map((s, i) => (\n                <li key={i}>\n                  {s.artist.name}, {s.performance.title}\n                  {!this.isActive(show, s) && (\n                    <button\n                      onClick={() => this.handleChangeCurrent(show.id, s.artist.id, s.performance.id)}>\n                      Active\n                    </button>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    )\n  }\n}","import React, {Component} from \"react\";\nimport { Icon } from \"antd-mobile\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\n  class CardShowItem extends Component {\n  constructor (props){\n    super(props);\n    this.state= {\n      activePerformance: false\n    }\n  }\n  render(){\n\n  const show = this.props.show;\n  const artistList = show.artistList;\n  const performanceList = show.performanceList;\n  const arrayArtistPerformance = [...artistList, ...performanceList];\n  console.log(artistList,'artistList');\n  \n\n  if (!show || (show && show.length === 0))\n    return (\n      <React.Fragment>\n        {console.log(show, \"show Control\")}\n        <Icon type=\"loading\" style={{ color: \"black\" }} />\n        <div> Loading...</div>\n      </React.Fragment>\n    );\n\n    const handleChange = (event) => {\n      this.setState({activePerformance: true})\n      console.log(this.state, 'state')\n    }\n\n    const finalArr = [];\n    if(artistList.length !== 0 && performanceList.length !== 0){\n    for (let i = 0; i < artistList.length; i++) {\n      finalArr.push(\n      [artistList[i].name,\n      \" \",\n      performanceList[i].title]\n      )\n      console.log(finalArr, 'finalArr')\n    }\n  }\n    \n\n  return (\n    <React.Fragment>\n      <div className=\"box-controller\">{show.length} Sesiones</div>\n      {finalArr.map((session, index) => (\n      <div key={index}>\n        <span>Sesión </span>\n        <div className=\"input-group\">\n          <fieldset>\n            <Form.Group as={Row}>\n              <Col>\n                <Form.Check type=\"radio\" name=\"formHorizontalRadios\" onChange={handleChange}/>\n              </Col>\n            </Form.Group>\n          </fieldset>\n\n          <div\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Text input with radio button\"\n          >\n            { session }\n          </div>\n        </div>\n      </div>\n      ))}\n    </React.Fragment>\n  );\n};\n  }\n\nexport default CardShowItem;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { NavBar } from \"antd-mobile\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Board from \"./components/Board\";\nimport CreateShows from \"./components/CreateShows\";\nimport CreateArtist from \"./components/artist/CreateArtist\"\nimport ControlArtistPerformance from './components/controlArtistPerformance'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar mode=\"light\" />\n        <Switch>\n          <Route exact path=\"/active-performance\" component={Board} />\n          <Route exact path=\"/create-show\" component={CreateShows} />\n          <Route exact path=\"/create-artist\" component={CreateArtist} />\n          <Route exact path=\"/control-active\" component={ControlArtistPerformance} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}